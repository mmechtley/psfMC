import pymc.distributions
from pymc.Container import Container
from pymc import CircularStochastic


def _magic_dist(class_name):
    """
    Magically import all pymc distributions, create constructors that don't
    require the trace name argument. Trace names are auto-generated by psfMC.
    """
    dist = getattr(pymc.distributions, class_name)
    return lambda *args, **kwargs: dist('', *args, **kwargs)

_dists = [pymc.distributions.capitalize(_dist) for _dist
          in pymc.distributions.availabledistributions]
for _dist in _dists:
    locals()[_dist] = _magic_dist(_dist)


class CircularUniform(pymc.distributions.Uniform, CircularStochastic):
    def __init__(self, lower, upper, *args, **kwargs):
        self.interval_parents = Container([upper, lower])
        pymc.distributions.Uniform.__init__(self, name='',
                                            lower=lower, upper=upper,
                                            *args, **kwargs)
